/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type AddSocialMutationVariables = Types.Exact<{
  name: Types.Scalars['String'];
  username: Types.Scalars['String'];
}>;


export type AddSocialMutationResult = { __typename?: 'Mutation', addSocial: { __typename?: 'Social', id: number, name?: string | null, username?: string | null } };


export const AddSocialDocument = `
    mutation addSocial($name: String!, $username: String!) {
  addSocial(name: $name, username: $username) {
    id
    name
    username
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    addSocial: build.mutation<AddSocialMutationResult, AddSocialMutationVariables>({
      query: (variables) => ({ document: AddSocialDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useAddSocialMutation } = injectedRtkApi;

