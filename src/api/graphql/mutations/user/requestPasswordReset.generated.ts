/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type RequestPasswordResetMutationVariables = Types.Exact<{
  email: Types.Scalars['String'];
  role: Types.UserRole;
}>;


export type RequestPasswordResetMutationResult = { __typename?: 'Mutation', requestPasswordReset: { __typename?: 'Message', message: string } };


export const RequestPasswordResetDocument = `
    mutation requestPasswordReset($email: String!, $role: UserRole!) {
  requestPasswordReset(email: $email, role: $role) {
    message
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    requestPasswordReset: build.mutation<RequestPasswordResetMutationResult, RequestPasswordResetMutationVariables>({
      query: (variables) => ({ document: RequestPasswordResetDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useRequestPasswordResetMutation } = injectedRtkApi;

