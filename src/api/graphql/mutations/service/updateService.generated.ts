/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type UpdateServiceMutationVariables = Types.Exact<{
  serviceId: Types.Scalars['Int'];
  name?: Types.InputMaybe<Types.Scalars['String']>;
  description?: Types.InputMaybe<Types.Scalars['String']>;
  price?: Types.InputMaybe<Types.Scalars['Float']>;
  duration?: Types.InputMaybe<Types.Scalars['Float']>;
  durationUnit?: Types.InputMaybe<Types.DurationUnitType>;
  inHouse?: Types.InputMaybe<Types.Scalars['Boolean']>;
  category?: Types.InputMaybe<Types.CategoryType>;
}>;


export type UpdateServiceMutationResult = { __typename?: 'Mutation', updateService: { __typename?: 'Service', id: number, name?: string | null, description?: string | null, price?: number | null, duration?: number | null, durationUnit?: Types.DurationUnitType | null, inHouse?: boolean | null, category?: Types.CategoryType | null } };


export const UpdateServiceDocument = `
    mutation updateService($serviceId: Int!, $name: String, $description: String, $price: Float, $duration: Float, $durationUnit: DurationUnitType, $inHouse: Boolean, $category: CategoryType) {
  updateService(
    serviceId: $serviceId
    name: $name
    description: $description
    price: $price
    duration: $duration
    durationUnit: $durationUnit
    inHouse: $inHouse
    category: $category
  ) {
    id
    name
    description
    price
    duration
    durationUnit
    inHouse
    category
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    updateService: build.mutation<UpdateServiceMutationResult, UpdateServiceMutationVariables>({
      query: (variables) => ({ document: UpdateServiceDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useUpdateServiceMutation } = injectedRtkApi;

