/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type UpdateOperatingTimeMutationVariables = Types.Exact<{
  operatingTimeId: Types.Scalars['Int'];
  day?: Types.InputMaybe<Types.DayType>;
  opens?: Types.InputMaybe<Types.Scalars['String']>;
  closes?: Types.InputMaybe<Types.Scalars['String']>;
}>;


export type UpdateOperatingTimeMutationResult = { __typename?: 'Mutation', updateOperatingTime: { __typename?: 'OperatingTime', id: number, day?: Types.DayType | null, opens?: string | null, closes?: string | null } };


export const UpdateOperatingTimeDocument = `
    mutation updateOperatingTime($operatingTimeId: Int!, $day: DayType, $opens: String, $closes: String) {
  updateOperatingTime(
    operatingTimeId: $operatingTimeId
    day: $day
    opens: $opens
    closes: $closes
  ) {
    id
    day
    opens
    closes
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    updateOperatingTime: build.mutation<UpdateOperatingTimeMutationResult, UpdateOperatingTimeMutationVariables>({
      query: (variables) => ({ document: UpdateOperatingTimeDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useUpdateOperatingTimeMutation } = injectedRtkApi;

