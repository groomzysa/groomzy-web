/**
 *
 * THIS FILE IS AUTOGENERATED, DO NOT EDIT IT!
 *
 * instead, edit one of the `.graphql` files in this project and run
 *
 * npm run graphql-codegen
 *
 * for this file to be re-created
 */

import type * as Types from '../../api.schema';

import { api } from '../../..';
export type DeleteOperatingTimeMutationVariables = Types.Exact<{
  operatingTimeId: Types.Scalars['Int'];
}>;


export type DeleteOperatingTimeMutationResult = { __typename?: 'Mutation', deleteOperatingTime: { __typename?: 'OperatingTime', id: number, day?: Types.DayType | null, opens?: string | null, closes?: string | null } };


export const DeleteOperatingTimeDocument = `
    mutation deleteOperatingTime($operatingTimeId: Int!) {
  deleteOperatingTime(operatingTimeId: $operatingTimeId) {
    id
    day
    opens
    closes
  }
}
    `;

const injectedRtkApi = api.injectEndpoints({
  endpoints: (build) => ({
    deleteOperatingTime: build.mutation<DeleteOperatingTimeMutationResult, DeleteOperatingTimeMutationVariables>({
      query: (variables) => ({ document: DeleteOperatingTimeDocument, variables })
    }),
  }),
});

export { injectedRtkApi as api };
export const { useDeleteOperatingTimeMutation } = injectedRtkApi;

